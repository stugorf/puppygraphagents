services:
  puppygraph:
    image: puppygraph/puppygraph:stable
    container_name: puppygraph-dev
    pull_policy: always
    environment:
      - PUPPYGRAPH_USERNAME=$PUPPYGRAPH_USERNAME
      - PUPPYGRAPH_PASSWORD=$PUPPYGRAPH_PASSWORD
      - SCHEMA_PATH=$PUPPYGRAPH_SCHEMA_PATH
    networks:
      - graph_network
    ports:
      - "8081:8081"  # Web UI
      - "8182:8182"  # Gremlin
      - "7687:7687"  # Neo4j Bolt
    restart: unless-stopped
    volumes:
      - ./puppygraph-config:/puppygraph/conf
      - puppygraph-data:/puppygraph/data
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8081/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  postgres:
    image: postgres:16-alpine
    container_name: temporal_graph_postgres_dev
    environment:
      - POSTGRES_DB=temporal_graph
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres123
    networks:
      - graph_network
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: temporal_graph_app_dev
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres123@postgres:5432/temporal_graph
      - PUPPYGRAPH_URL=http://puppygraph:8081
      - OPEN_ROUTER_KEY=${OPEN_ROUTER_KEY}
      - OPEN_ROUTER_API_BASE=${OPEN_ROUTER_API_BASE}
      - SESSION_SECRET=${SESSION_SECRET:-temporal-kg-session-secret}
      - PORT=5000
    networks:
      - graph_network
    ports:
      - "5000:5000"
    volumes:
      # Mount source code for hot reloading
      - ./client:/app/client
      - ./server:/app/server
      - ./shared:/app/shared
      - ./attached_assets:/app/attached_assets:ro
      - ./puppygraph-config:/app/puppygraph-config
      # Mount config files
      - ./package.json:/app/package.json
      - ./tsconfig.json:/app/tsconfig.json
      - ./tsconfig.server.json:/app/tsconfig.server.json
      - ./vite.config.ts:/app/vite.config.ts
      - ./tailwind.config.ts:/app/tailwind.config.ts
      - ./postcss.config.js:/app/postcss.config.js
      - ./drizzle.config.ts:/app/drizzle.config.ts
      - ./pyproject.toml:/app/pyproject.toml
      - ./uv.lock:/app/uv.lock
    depends_on:
      postgres:
        condition: service_healthy
      puppygraph:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

networks:
  graph_network:
    driver: bridge
    name: temporal-graph-network

volumes:
  postgres_data:
    name: temporal-graph-postgres-data
  puppygraph-data:
    name: temporal-graph-puppygraph-data
