# Development Dockerfile with hot reloading
FROM node:20-alpine

# Install Python for DSPy agents and Rust for tiktoken
RUN apk add --no-cache python3 py3-pip python3-dev gcc musl-dev curl rust cargo

# Set working directory
WORKDIR /app

# Copy package files
COPY package*.json ./

# Install all dependencies (including dev dependencies)
RUN npm ci

# Install Python dependencies using pyproject.toml
COPY pyproject.toml uv.lock ./
RUN pip3 install uv --break-system-packages && uv pip install --system --no-cache . --break-system-packages

# Copy source code (will be mounted as volume in docker-compose)
COPY . .

# Copy graph schema configuration for PuppyGraph
COPY puppygraph-config/graph-schema.json ./puppygraph-config/

# Create attached_assets directory
RUN mkdir -p attached_assets

# Create non-root user for security
RUN addgroup -g 1001 -S nodejs && \
    adduser -S temporal-kg -u 1001 -G nodejs

# Change ownership of app directory
RUN chown -R temporal-kg:nodejs /app

# Switch to non-root user
USER temporal-kg

# Expose port
EXPOSE 5000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
  CMD curl -f http://localhost:5000/api/health || exit 1

# Start the development server with hot reloading
CMD ["npm", "run", "dev"]
